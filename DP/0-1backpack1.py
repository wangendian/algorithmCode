
# 获取最大的价值
def max_():
    for i in range(1, n + 1):  # 有几个物品可供选择
        for j in range(1, m + 1):  # 模拟背包容量从m+1
            if j < v[i - 1]:  # 如果此时背包容量小于当前物品重量
                f[i][j] = f[i - 1][j]  # 不拿这个物品
            else:
                # 此时有两种选择,拿或不拿
                f[i][j] = max(f[i - 1][j], f[i - 1][j - v[i - 1]] + w[i - 1])
                # 选择最好的一种方式，也就是两种情况作比较，取价值的较大值

# 物品的个数
n = 3
# 背包总体积
m = 5
# 各个物品的体积列表
v = [3,2,5]
# 对应物品的价值
w = [8,5,12]
# 模拟背包
f = [[0] * (m + 1) for _ in range(n + 1)]
# 获取最大的价值
max_()
print(f[n][m])